{
	"info": {
		"_postman_id": "52963518-67e4-457b-a18c-4289dad950ff",
		"name": "Vendedor Logic",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST Vendedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5ece0e12-5927-45f0-8128-106dbbaf81b3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Ok\",function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"postman.setGlobalVariable(\"new_id_vendedor\",data.id);",
							"pm.test(\"DTO correcto\",function(){",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1,\"nombre\":\"Juan Sebastián\",\"apellido\":\"Bravo Castelo\"}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_CarrosUsados-api/api/vendedores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_CarrosUsados-api",
						"api",
						"vendedores"
					]
				},
				"description": "POST Vendedor para crear un cliente dentro de la base de datos. \nValores JSON quemados:\n*param* id: 1 //Innecesario: ID incremental en la db.\n*param* nombre:\"Juan Sebastián\" //Sin símbolos \n*param* apellido:\"Bravo Castelo\" //Sin símbolos\n"
			},
			"response": []
		},
		{
			"name": "GET Vendedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20923dab-dec6-4597-8a50-e1b87c470799",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Ok\",function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_CarrosUsados-api/api/vendedor/{{new_id_vendedor}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_CarrosUsados-api",
						"api",
						"vendedor",
						"{{new_id_vendedor}}"
					]
				},
				"description": "Prueba de postman para obtener el vendedor con *param* _idVendedor_. Se asume que el vendedor con idVendedor 1 existe."
			},
			"response": []
		},
		{
			"name": "PUT Vendedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44fa116b-de5b-4540-9318-db2706118a3f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Ok\",function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"DTO correcto\",function(){",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1,\"nombre\":\"Juan Sebastián\",\"apellido\":\"Bravo Castelo\"}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_CarrosUsados-api/api/vendedores/{{new_id_vendedor}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_CarrosUsados-api",
						"api",
						"vendedores",
						"{{new_id_vendedor}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Vendedor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81b3dbc5-118b-4484-9a3a-ac14cb08f364",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Borrado correcto\",function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Ok\",function(){",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_CarrosUsados-api/api/vendedores/{{new_id_vendedor}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_CarrosUsados-api",
						"api",
						"vendedores",
						"{{new_id_vendedor}}"
					]
				},
				"description": "DELETE Vendedor con *param* _idVendedor_. Se asume que el vendedor con idVendedor 1 ya existe."
			},
			"response": []
		},
		{
			"name": "GET Vendedores",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a2a2ce0-dc5d-4c56-bd8b-b4835148b973",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Ok\",function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"DTO correcto\",function(){",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{direccion}}/s4_CarrosUsados-api/api/vendedores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{direccion}}",
					"path": [
						"s4_CarrosUsados-api",
						"api",
						"vendedores"
					]
				},
				"description": "Prueba de postman para obtener una lista con todos los vendedores de la base de datos."
			},
			"response": []
		},
		{
			"name": "POST Vendedor error precondición",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9d287252-c9af-415e-bf83-67fb8a6f7396",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Prueba precondición fallida correcta\",function () {",
							"    pm.response.to.have.status(412);",
							"    pm.expect(pm.response.text()).to.include(\"La información del vendedor es inválida.\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1,\"nombre\":\"Juan Sebastián\",\"apellido\":\"Bravo Castelo2&%\"}"
				},
				"url": {
					"raw": "http://{{ip}}:{{direccion}}/s4_CarrosUsados-api/api/vendedores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{direccion}}",
					"path": [
						"s4_CarrosUsados-api",
						"api",
						"vendedores"
					]
				},
				"description": "POST con error de lógica en el nombre."
			},
			"response": []
		},
		{
			"name": "GET Vendedor inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4855b1bc-b8a8-4a45-92de-edf3a08a969b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Prueba administrador inexistente correcta\",function () {",
							"    pm.response.to.have.status(404);",
							"pm.expect(pm.response.text()).to.include(\"El recurso /administradores/99999 no existe.\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{direccion}}/s4_CarrosUsados-api/api/vendedores/99999",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{direccion}}",
					"path": [
						"s4_CarrosUsados-api",
						"api",
						"vendedores",
						"99999"
					]
				},
				"description": "Prueba GET de un vendedor que no existe en la base de datos. Se asume vendedor con id 99999 inexistente en el sistema. "
			},
			"response": []
		}
	]
}